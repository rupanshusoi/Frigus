<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Frigus.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="unused12" type="optional" numBits="12" relativity="absolute" signed="false" defaultValue="0" id="model.Field79efccfa">
	</Field>
	<Field name="addr" type="required" numBits="8" relativity="absolute" signed="false" defaultValue="0" id="model.Field3024108a">
	</Field>
	<Field name="unused" type="optional" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field6191de02">
	</Field>
	<Field name="opcode" type="required" numBits="4" relativity="absolute" signed="false" defaultValue="0" id="model.Field6924ef10">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="ACC" width="16" initialValue="0" readOnly="false" id="model.module.Register6e2b66d2" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register5f870a9f" />
	<Register name="MAR" width="8" initialValue="0" readOnly="false" id="model.module.Register6aafea4b" />
	<Register name="MDR" width="16" initialValue="0" readOnly="false" id="model.module.Register48c841a0" />
	<Register name="PC" width="8" initialValue="0" readOnly="false" id="model.module.Register70bb2840" />
	<Register name="STATUS" width="8" initialValue="0" readOnly="false" id="model.module.Register170f173a" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY" bit="0" register="model.module.Register170f173a" halt="false" id="model.module.ConditionBit777cfd7" />
	<ConditionBit name="HALT" bit="0" register="model.module.Register170f173a" halt="true" id="model.module.ConditionBit6c55b2e7" />
	<ConditionBit name="OVERFLOW" bit="0" register="model.module.Register170f173a" halt="false" id="model.module.ConditionBit166a02" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="256" cellSize="16" id="model.module.RAM57c17a48" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<Test name="eq-ACC" register="model.module.Register6e2b66d2" start="0" numBits="16" comparison="EQ" value="0" omission="1" id="model.microinstruction.Test6ef11e10" />
	<Test name="ge-ACC" register="model.module.Register6e2b66d2" start="0" numBits="16" comparison="GE" value="0" omission="1" id="model.microinstruction.Test2f724ba3" />
	<Test name="gt-ACC" register="model.module.Register6e2b66d2" start="0" numBits="16" comparison="GT" value="0" omission="1" id="model.microinstruction.Test1c876235" />
	<Test name="le-ACC" register="model.module.Register6e2b66d2" start="0" numBits="16" comparison="LE" value="0" omission="1" id="model.microinstruction.Test404848d7" />
	<Test name="lt-ACC" register="model.module.Register6e2b66d2" start="0" numBits="16" comparison="LT" value="0" omission="1" id="model.microinstruction.Test262fcf50" />
	<Test name="neq-ACC" register="model.module.Register6e2b66d2" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test1b3da765" />

	<!--............. increment .....................-->
	<Increment name="inc-PC" register="model.module.Register70bb2840" overflowBit="model.module.ConditionBit166a02" carryBit="model.module.ConditionBit777cfd7" delta="1" id="model.microinstruction.Increment3c8ce8fd" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<Arithmetic name="ACC&lt;-ACC+MDR" type="ADD" source1="model.module.Register6e2b66d2" source2="model.module.Register48c841a0" destination="model.module.Register6e2b66d2" overflowBit="model.module.ConditionBit166a02" carryBit="model.module.ConditionBit777cfd7" id="model.microinstruction.Arithmetic3e00014b" />
	<Arithmetic name="ACC&lt;-ACC-MDR" type="SUBTRACT" source1="model.module.Register6e2b66d2" source2="model.module.Register48c841a0" destination="model.module.Register6e2b66d2" overflowBit="model.module.ConditionBit166a02" carryBit="model.module.ConditionBit777cfd7" id="model.microinstruction.Arithmetic668d1c94" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ACC&lt;-MDR" source="model.module.Register48c841a0" srcStartBit="0" dest="model.module.Register6e2b66d2" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR10fd89af" />
	<TransferRtoR name="IR&lt;-MDR" source="model.module.Register48c841a0" srcStartBit="0" dest="model.module.Register5f870a9f" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR4bed504d" />
	<TransferRtoR name="MAR&lt;-IR" source="model.module.Register5f870a9f" srcStartBit="0" dest="model.module.Register6aafea4b" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR75d90a22" />
	<TransferRtoR name="MAR&lt;-MDR" source="model.module.Register48c841a0" srcStartBit="0" dest="model.module.Register6aafea4b" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR7b3ed1b1" />
	<TransferRtoR name="MAR&lt;-PC" source="model.module.Register70bb2840" srcStartBit="0" dest="model.module.Register6aafea4b" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR7f28f88" />
	<TransferRtoR name="MDR&lt;-ACC" source="model.module.Register6e2b66d2" srcStartBit="0" dest="model.module.Register48c841a0" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR26bcc803" />
	<TransferRtoR name="PC&lt;-IR" source="model.module.Register5f870a9f" srcStartBit="0" dest="model.module.Register70bb2840" destStartBit="0" numBits="8" id="model.microinstruction.TransferRtoR1b894eec" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="decode-IR" ir="model.module.Register5f870a9f" id="model.microinstruction.Decode1637a775" />

	<!--............. set condition bit .............-->
	<SetCondBit name="set-HALT" bit="model.module.ConditionBit6c55b2e7" value="1" id="model.microinstruction.SetCondBit5aae4f4" />
	<SetCondBit name="unset-HALT" bit="model.module.ConditionBit6c55b2e7" value="0" id="model.microinstruction.SetCondBit4516c892" />

	<!--............. io ............................-->
	<IO name="in-ACC" direction="input" type="integer" buffer="model.module.Register6e2b66d2" connection="[Console]" id="model.microinstruction.IO14b910f2" />
	<IO name="out-ACC" direction="output" type="integer" buffer="model.module.Register6e2b66d2" connection="[Console]" id="model.microinstruction.IO3f1e111f" />

	<!--............. memory access .................-->
	<MemoryAccess name="MDR&lt;-mem[MAR]" direction="read" memory="model.module.RAM57c17a48" data="model.module.Register48c841a0" address="model.module.Register6aafea4b" id="model.microinstruction.MemoryAccess6dc1cf4c" />
	<MemoryAccess name="mem[MAR]&lt;-MDR" direction="write" memory="model.module.RAM57c17a48" data="model.module.Register48c841a0" address="model.module.Register6aafea4b" id="model.microinstruction.MemoryAccess1e60d83e" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End42826580" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoR7f28f88" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4bed504d" />
		<Microinstruction microRef="model.microinstruction.Increment3c8ce8fd" />
		<Microinstruction microRef="model.microinstruction.Decode1637a775" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="a2m" opcode="f" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#f3fbc9 #f5c08a #d893db" assemblyColors="#f3fbc9 #f5c08a #d893db" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d90a22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7b3ed1b1" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR26bcc803" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1e60d83e" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="m2a" opcode="e" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#b1fdcb #96c697 #d49789" assemblyColors="#b1fdcb #96c697 #d49789" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d90a22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7b3ed1b1" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR10fd89af" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="frigus" opcode="d" instructionFormat="opcode unused12" assemblyFormat="opcode unused12" instructionColors="#aac5c6 #80eeac" assemblyColors="#aac5c6 #80eeac" >
		<Microinstruction microRef="model.microinstruction.SetCondBit4516c892" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="jmp" opcode="c" instructionFormat="opcode unused addr" assemblyFormat="opcode addr unused" instructionColors="#ebbc8d #aedff7 #b4a4a5" assemblyColors="#ebbc8d #b4a4a5 #aedff7" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR1b894eec" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="stop" opcode="b" instructionFormat="opcode unused12" assemblyFormat="opcode unused12" instructionColors="#b2faad #839dd1" assemblyColors="#b2faad #839dd1" >
		<Microinstruction microRef="model.microinstruction.SetCondBit5aae4f4" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="output" opcode="a" instructionFormat="opcode unused12" assemblyFormat="opcode unused12" instructionColors="#a7a5c3 #91a88e" assemblyColors="#a7a5c3 #91a88e" >
		<Microinstruction microRef="model.microinstruction.IO3f1e111f" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="input" opcode="9" instructionFormat="opcode unused12" assemblyFormat="opcode unused12" instructionColors="#e7feb3 #9fdaf9" assemblyColors="#e7feb3 #9fdaf9" >
		<Microinstruction microRef="model.microinstruction.IO14b910f2" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="jmpn" opcode="8" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#82c0a4 #a5a8b2 #85ddf8" assemblyColors="#82c0a4 #a5a8b2 #85ddf8" >
		<Microinstruction microRef="model.microinstruction.Test2f724ba3" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1b894eec" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="jmpp" opcode="7" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#baf492 #9784c4 #b083fe" assemblyColors="#baf492 #9784c4 #b083fe" >
		<Microinstruction microRef="model.microinstruction.Test404848d7" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1b894eec" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="jmpnz" opcode="6" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#86da8c #a89480 #b495b7" assemblyColors="#86da8c #a89480 #b495b7" >
		<Microinstruction microRef="model.microinstruction.Test6ef11e10" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1b894eec" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="jmpz" opcode="5" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#a8cb95 #ee89e3 #92b4f6" assemblyColors="#a8cb95 #ee89e3 #92b4f6" >
		<Microinstruction microRef="model.microinstruction.Test1b3da765" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR1b894eec" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="4" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#a9b18b #e79ff1 #d1adfa" assemblyColors="#a9b18b #e79ff1 #d1adfa" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d90a22" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR26bcc803" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1e60d83e" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="3" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#bf9fe6 #b599b2 #bf86f7" assemblyColors="#bf9fe6 #b599b2 #bf86f7" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d90a22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR10fd89af" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="sub" opcode="2" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#b79887 #98afb4 #dfbde9" assemblyColors="#b79887 #98afb4 #dfbde9" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d90a22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.Arithmetic668d1c94" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="1" instructionFormat="opcode unused addr" assemblyFormat="opcode unused addr" instructionColors="#c296fc #a780d0 #ccfe86" assemblyColors="#c296fc #a780d0 #ccfe86" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR75d90a22" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess6dc1cf4c" />
		<Microinstruction microRef="model.microinstruction.Arithmetic3e00014b" />
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<MachineInstruction name="nop" opcode="0" instructionFormat="opcode unused12" assemblyFormat="opcode unused12" instructionColors="#b8b8d6 #85a5b9" assemblyColors="#b8b8d6 #85a5b9" >
		<Microinstruction microRef="model.microinstruction.End42826580" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM57c17a48" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
